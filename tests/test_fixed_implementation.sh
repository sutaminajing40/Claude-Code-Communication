#!/bin/bash
# ‰øÆÊ≠£Áâà„ÅÆ„ÉÜ„Çπ„Éà - multi-claude„ÅåÊ≠£„Åó„ÅèÂãï‰Ωú„Åô„Çã„ÅãÁ¢∫Ë™ç

echo "üß™ Testing Fixed Multi-Claude Implementation"
echo "==========================================="
echo ""

# „ÉÜ„Çπ„Éà1: ÊúÄÂ∞èÈôê„ÅÆÁí∞Â¢É„Åß„ÇÇÂãï‰Ωú„Åô„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
echo "TEST 1: Minimal environment test"
echo "Running multi-claude with minimal env..."
echo ""

env -i HOME="$HOME" PATH="/usr/local/bin:/usr/bin:/bin" bash -c '
cd /Users/iguchihiroto/dev/multi-claude
echo "Current PATH: $PATH"
echo ""

# multi-claude„Çπ„ÇØ„É™„Éó„Éà„ÅÆË©≤ÂΩìÈÉ®ÂàÜ„ÇíÁõ¥Êé•ÂÆüË°å
export PATH="$HOME/.claude/local:$HOME/.local/bin:$HOME/bin:/usr/local/bin:/opt/homebrew/bin:$PATH"

# ‰øÆÊ≠£Áâà„ÅÆÊ§úÂá∫„É≠„Ç∏„ÉÉ„ÇØ„Çí„ÉÜ„Çπ„Éà
CLAUDE_CMD=""

# 1. Áõ¥Êé•„Éë„Çπ„ÇíÊúÄÂÑ™ÂÖà„ÅßÁ¢∫Ë™ç
if [ -x "$HOME/.claude/local/claude" ]; then
    CLAUDE_CMD="$HOME/.claude/local/claude"
    echo "‚úÖ Found claude at: $CLAUDE_CMD"
elif which claude >/dev/null 2>&1; then
    CLAUDE_CMD=$(which claude 2>/dev/null)
    echo "‚úÖ Found claude via which: $CLAUDE_CMD"
elif command -v claude >/dev/null 2>&1; then
    CLAUDE_CMD="claude"
    echo "‚úÖ Found claude via command -v"
else
    echo "‚ùå Claude not found"
    exit 1
fi

if [ -n "$CLAUDE_CMD" ]; then
    echo ""
    echo "üéâ SUCCESS: Claude command detected!"
    echo "   Location: $CLAUDE_CMD"
    echo "   Executable: $([ -x "$CLAUDE_CMD" ] && echo "Yes" || echo "No")"
else
    echo ""
    echo "‚ùå FAILED: Claude command not detected"
    exit 1
fi
'

echo ""
echo "==========================================="
echo "TEST 2: Actual multi-claude script test"
echo ""

# ÂÆüÈöõ„ÅÆmulti-claude„Çπ„ÇØ„É™„Éó„Éà„ÅåÂãï‰Ωú„Åô„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØÔºà„Éò„É´„ÉóË°®Á§∫„ÅÆ„ÅøÔºâ
if /Users/iguchihiroto/dev/multi-claude/multi-claude --help >/dev/null 2>&1; then
    echo "‚úÖ multi-claude --help executes successfully"
else
    echo "‚ùå multi-claude --help failed"
fi

echo ""
echo "==========================================="
echo "Test completed!"